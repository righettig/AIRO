services:
  admin-app:
    depends_on:
      - admin-gateway-api
    build:
      context: ./front-end/admin/airo-admin-frontend
    ports:
      - "5001:3000"
    # environment:
    #   - NEXT_PUBLIC_AUTH_API_URL=${AUTH_API_URL}
    #   - NEXT_PUBLIC_ADMIN_API_URL=${ADMIN_API_URL}
    #   - NEXT_PUBLIC_EVENTS_API_URL=${EVENTS_API_URL}
    develop:
      context: ./front-end/admin/airo-admin-frontend
      watch:
        - action: sync
          path: ./front-end/admin/airo-users-frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./front-end/admin/airo-admin-frontend/package.json

  users-app:
    depends_on:
      - users-gateway-api
    build:
      context: ./front-end/users/airo-users-frontend
    ports:
      - "5000:4200"
    environment:
      - USERS_GATEWAY_API_URL=${USERS_GATEWAY_API_URL}
    develop:
      context: ./front-end/users/airo-users-frontend
      watch:
        - action: sync
          path: ./front-end/users/airo-users-frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./front-end/users/airo-users-frontend/package.json

  users-gateway-api:
    depends_on:
      - auth-service
      - profile-service
      - notifications-service
      - billing-service
    build:
      context: ./back-end/gateways/airo-users-gateway-api
    ports:
      - "3000:3000"
    environment:
      - AUTH_API_URL=${AUTH_API_URL}
      - PROFILE_API_URL=${PROFILE_API_URL}
      - BILLING_API_URL=${BILLING_API_URL}
      - INVOICE_API_URL=${INVOICE_API_URL}
    develop:
      context: ./back-end/gateways/airo-users-gateway-api
      watch:
        - action: rebuild
          path: ./back-end/gateways/airo-users-gateway-api
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./back-end/gateways/airo-users-gateway-api/package.json

  admin-gateway-api:
    # depends_on:
    #   - auth-service
    #   - profile-service
    #   - notifications-service
    #   - billing-service
    build:
      context: ./back-end/gateways/airo-admin-gateway-api
    ports:
      - "3001:3000"
    # environment:
    #   - AUTH_API_URL=${AUTH_API_URL}
    #   - PROFILE_API_URL=${PROFILE_API_URL}
    #   - BILLING_API_URL=${BILLING_API_URL}
    #   - INVOICE_API_URL=${INVOICE_API_URL}
    develop:
      context: ./back-end/gateways/airo-admin-gateway-api
      watch:
        - action: rebuild
          path: ./back-end/gateways/airo-admin-gateway-api
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./back-end/gateways/airo-admin-gateway-api/package.json

  auth-service:
    build:
      context: .
      dockerfile: ./back-end/microservices/airo-auth-microservice/Dockerfile
    environment:
      - FIREBASE_PROJECT_NAME=${FIREBASE_PROJECT_NAME}
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_CONFIG_FILE=${FIREBASE_CONFIG_FILE}
      - JWT_AUTHORITY=${JWT_AUTHORITY}
      - CORS_ALLOWED_ORIGINS=${USERS_FRONT_END_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
    ports:
      - "4000:8080" # https not working so far!
    volumes:
      - airo-config-volume:/app/config
    depends_on:
      - rabbitmq

  profile-service:
    build:
      context: .
      dockerfile: ./back-end/microservices/airo-profile-microservice/Dockerfile
    environment:
      - FIREBASE_PROJECT_NAME=${FIREBASE_PROJECT_NAME}
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_CONFIG_FILE=${FIREBASE_CONFIG_FILE}
      - JWT_AUTHORITY=${JWT_AUTHORITY}
      - CORS_ALLOWED_ORIGINS=${USERS_FRONT_END_URL}
    ports:
      - "4001:8080" # https not working so far!
    volumes:
      - airo-config-volume:/app/config
  
  billing-service:
    build:
      context: ./back-end/microservices/airo-billing-microservice
    environment:
      - MONGO_URL=${BILLING_MONGO_DB_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
    ports:
      - "4002:3000"
    depends_on:
      - mongodb
      - rabbitmq
    develop:
      context: ./back-end/microservices/airo-billing-microservice
      watch:
        - action: rebuild
          path: ./back-end/microservices/airo-billing-microservice
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./back-end/microservices/airo-billing-microservice/package.json

  invoicing-service:
    build:
      context: ./back-end/microservices/airo-invoicing-microservice
    environment:
      - PROFILE_API_URL=${PROFILE_API_URL}
      - MONGO_URL=${INVOICE_MONGO_DB_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
    ports:
      - "4003:3000"
    depends_on:
      - profile-service
      - mongodb
      - rabbitmq
    develop:
      context: ./back-end/microservices/airo-invoicing-microservice
      watch:
        - action: rebuild
          path: ./back-end/microservices/airo-invoicing-microservice
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./back-end/microservices/airo-invoicing-microservice/package.json

  notifications-service:
    build:
      context: ./back-end/microservices/airo-notifications-microservice
    environment:
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_FROM_EMAIL=${SENDGRID_FROM_EMAIL}
      - RABBITMQ_URL=${RABBITMQ_URL}
    ports:
      - "4004:3000"
    depends_on:
      - rabbitmq
    develop:
      context: ./back-end/microservices/airo-notifications-microservice
      watch:
        - action: rebuild
          path: ./back-end/microservices/airo-notifications-microservice
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./back-end/microservices/airo-notifications-microservice/package.json

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"    # RabbitMQ default port
      - "15672:15672"  # RabbitMQ management console port

  mongodb:
    image: mongo:6.0
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db

  # When uncommenting to run e2e tests please update .env file with correct USERS_GATEWAY_API_URL for e2e
  # cypress:
  #   image: cypress/included:13.14.2
  #   depends_on:
  #     - users-app
  #   environment:
  #     # IMPORTANT: the internal post MUST be used here, otherwise cypress cannot find the app. Obviously this should be fixed!
  #     - CYPRESS_BASE_URL=http://users-app:4200
  #   working_dir: /e2e
  #   volumes:
  #     - ./front-end/users/airo-users-frontend:/e2e # Mount Cypress test folder

volumes:
  airo-config-volume:
    external: true 
  mongo_data: